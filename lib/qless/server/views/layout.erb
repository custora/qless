<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title><%= application_name %><%= (title.length == 0) ? '' : (' | ' + title) %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="Dan Lecocq">

    <link href="<%= u '/css/bootstrap.min.css' %>" rel="stylesheet">
    <link href="<%= u '/css/bootstrap-theme.min.css' %>" rel="stylesheet">
    <link href="<%= u '/css/docs.css' %>" rel="stylesheet">
    <link href="<%= u '/css/jquery.noty.css' %>" rel="stylesheet">
    <link href="<%= u '/css/noty_theme_twitter.css' %>" rel="stylesheet">
    <link href="<%= u '/css/custora_navbar.css' %>" rel="stylesheet">
    <link href="<%= u '/css/custora_overview.css' %>" rel="stylesheet">
    <link href="<%= u '/css/custora_workers.css' %>" rel="stylesheet">
    <link href="<%= u '/css/custora_job.css' %>" rel="stylesheet">
    <script src="//code.jquery.com/jquery-2.1.3.min.js" type="text/javascript"></script>

    <style type="text/css">
    body {
      padding-top: 60px;
    }

    h2 {
      font-size: 20px;
      line-height: 40px;
    }

    pre {
      font-size: 12px;
    }

    .btn-group span {
      /* This is ugly. Anyone want to change it? */
      border-color: #e6e6e6 #e6e6e6 #bfbfbf;
      border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
      border: 1px solid #cccccc;
      border-bottom-color: #b3b3b3;
      background-color: #f5f5f5;
      font-size: 13px;
      line-height: 18px;
      padding: 4px 10px 4px;
    }

	 .btn-group input, .btn-group span {
      position: relative;
      float: left;
      margin-left: -1px;
      -webkit-border-radius: 0;
      -moz-border-radius: 0;
      border-radius: 0;
      margin-bottom: 0px;
	  }

    .btn-group input:first-child, .btn-group span:first-child {
      margin-left: 0;
      -webkit-border-top-left-radius: 4px;
      -moz-border-radius-topleft: 4px;
      border-top-left-radius: 4px;
      -webkit-border-bottom-left-radius: 4px;
      -moz-border-radius-bottomleft: 4px;
      border-bottom-left-radius: 4px;
    }

    .large-text {
      font-size:18px;
    }

    .queue-column {
      min-width:300px;
    }

    </style>

    <script type="text/javascript">

    window.pivotalToken = "<%= $PIVOTAL_TOKEN %>";
    window.pivotalProjectId = "<%= $PIVOTAL_PROJECT_ID %>";

    /* This is a helper method to display an alert at the top of the page,
     * in a vein similar to that of Ruby's flash */
    var flash = function(message, t, duration) {
      var noty_id = noty({
        text   : '<strong>' + message + '</strong>',
        layout : 'top',
        type   : t || 'error',
        theme  : 'noty_theme_twitter',
        timeout: duration || 1500});
    }

    /* This just sets a few options that we use */
    var _ajax = function(obj) {
      $.ajax({
        url: obj.url,
        type: 'POST',
        dataType: 'json',
        data: JSON.stringify(obj.data),
        processData: false,
        success: obj.success || function() {},
        error: obj.error || function() {}
      });
    }

    var createPivotalStory = function(jid, cb) {
      var json = JSON.parse($("#job-json-" + jid).text());
      var storyData = jobToStory(json);

      if (window.pivotalProjectId === "" && window.pivotalToken === "") {
        alert("ENV['PIVOTAL_TOKEN'] and ENV['PIVOTAL_PROJECT_ID'] are not specified.");
        return;
      }

      $.ajax({
        url: `https://www.pivotaltracker.com/services/v5/projects/${window.pivotalProjectId}/stories`,
        type: 'POST',
        contentType: 'application/json',
        dataType: 'json',
        headers: {
          "X-TrackerToken": window.pivotalToken
        },
        data: JSON.stringify(storyData),
        processData: true,
        success: function(resp) {
          flash("Created Pivotal Story", 'success', 1500);
          window.open(resp.url, '_blank')
          tag(jid, "pt-" + resp.id, cb);
        },
        error: function(resp) {
          flash('Error creating story: ' + resp.responseJSON.error);
        },
      });
    }

    var addExistingPivotalStoryTag = function (jid, id) {
      tag(jid, "pt-" + id)
    }

    var jobToStory = function(job) {
      var data = {};

      var siteId = job.tags.find((tag) => { return tag.substring(0, 5) == "site-" }).substring(5);

      data.name = `${siteId}: ${(job.history[job.history.length - 1] || {}).group || "Unknown Error"}`;
      data.description = `[Link to Job](${window.location.origin}/qless/jobs/${job.jid})\n\n` +
        "`" + job.failure.message.substring(0, 15000) + "`"; // keep well under 20k limit on description
      data.story_type = "bug";
      data.labels = ['bug', 'bugsnag'];
      return data;
    }

    /* This is a helper method to move a job into a queue, and then it will
     * flash a message to that effect on the page */
    var move = function(jid, queue, cb) {
      _ajax({
        url: '<%= u "/move" %>',
        data: {id:jid, queue:queue},
        success: function() { flash('Moved ' + jid + ' to ' + queue, 'success', 1500); cb(jid, queue); },
        error:   function() { flash('Failed to move ' + jid + ' to ' + queue); }
      });
    }

    /* Helper function for retrying a job */
    var retry = function(jid, cb) {
      _ajax({
        url: '<%= u "/retry" %>',
        data: {id:jid},
        success: function() { flash('Retrying ' + jid, 'success', 1500); if (cb) { cb(jid, 'retry'); } },
        error:   function() { flash('Failed to retry ' + jid); }
      });
    }

    /* This is a helper method to cancel a job */
    var cancel = function(jid, cb) {
      _ajax({
        url: '<%= u "/cancel" %>',
        data: [jid],
        success: function() { flash('Canceled ' + jid, null, 1500); if (cb) { cb(jid, 'cancel'); } },
        error:   function() { flash('Failed to cancel ' + jid); }
      });
    }

    /* This is a helper method to untrack a job */
    var untrack = function(jid, cb) {
      _ajax({
        url: '<%= u "/untrack" %>',
        data: [jid],
        success: function() { flash('Stopped tracking ' + jid, 'success', 1500); if (cb) { cb(jid, 'untrack'); }  },
        error:   function() { flash('Failed to track ' + jid); }
      });
    }

    /* This is a helper to start tracking a job, with tags */
    var track = function(jid, tags, cb) {
      _ajax({
        url: '<%= u "/track" %>',
        data: {id:jid, tags:(tags || [])},
        success: function() { flash('Now tracking ' + jid, 'success', 1500); if (cb) { cb(jid, 'track'); }  },
        error:   function() { flash('Failed to track ' + jid); }
      });
    }

    /* This is a helper to retry all jobs of a certain failure type */
    var retryall = function(type, cb) {
      _ajax({
        url: '<%= u "/retryall" %>',
        data: {type: type},
        success: function(response) {
          flash('Retrying failures of type ' + type, 'success', 1500);
          if (cb) {
            for (var i in response) {
              cb(response[i].id);
            }
          }
        },
        error:   function() { flash('Failed to retry failures of type ' + type); }
      });
    }

    /* This is a helper to cancel all jobs of a certain failure type */
    var cancelall = function(type, cb) {
      _ajax({
        url: '<%= u "/cancelall" %>',
        data: {type: type},
        success: function(response) {
          flash('Canceling failures of type ' + type, 'success', 1500);
          if (cb) {
            for (var i in response) {
              cb(response[i].id);
            }
          }
        },
        error:   function() { flash('Failed to cancel failures of type ' + type); }
      });
    }

    /* This is a helper to remove job dependencies */
    var undepend = function(jid, dependency, cb) {
      _ajax({
        url: '<%= u "/undepend" %>',
        data: {id:jid, dependency:dependency},
        success: function() { flash(jid + ' no longer depends on ' + dependency, 'success', 1500); if (cb) { cb(jid, 'undepend'); }  },
        error:   function() { flash('Failed to remove ' + jid + '\'s dependency on ' + dependency); }
      });
    }

    /* Helper function to fade out a particular element id */
    var fade = function(jid, type) {
      if (type != 'untrack' && type != 'track') {
        $('#job-' + jid.replace('.', '')).slideUp();
      }
    }

    /* Helper function to make a button ask for confirmation
     * after being pressed once. Accepts the confirmation text,
     * and the function to execute after it has been run */
    var confirmation = function(button, html, action, delay) {
      var obj      = $(button);
      var original = obj.html();
      var timeout  = setTimeout(function() {
        obj.html(original).unbind('click').click(function() {
          confirmation(button, html, action, delay);
        });
      }, delay || 3000);
      obj.removeAttr('onclick').html(html).unbind('click').click(function() {
        clearTimeout(timeout);
        obj.html(original).unbind('click').click(function() {
          confirmation(button, html, action, delay);
        });
        action();
      });
    }

    var view_and_move_to_pt = function(jid, story_id) {
      window.open('https://www.pivotaltracker.com/story/show/<%=story_id%>', '_blank')
      job.untag(jid, 'auto-gen-pt')
    }

    /* Helper function for adding a tag to a job */
    var tag = function(jid, tag) {
      if (tag.length == 0) {
        return;
      }
      var data  = {};
      data[jid] = [tag];
      // The button group of the 'add tag' bit
      var group =
      _ajax({
        url: '<%= u "/tag" %>',
        data: data,
        success : function() {
          var div  = $('<div>').attr('class', 'btn-group').attr('style', 'float:left; margin-right: 10px;');
          var span = $('<span>').attr('class', 'tag').attr('style', 'line-height: 24px;');
          var a = $('a').attr('href', "/tag/?tag=" + tag).text(tag);
          var btn  = $('<button>').attr('class', 'btn btn-default').click(function() {
            untag(jid, tag);
          });
          btn.append($('<i>').attr('class', 'glyphicon glyphicon-remove'));
          span.append(a);
          div.append(span).append(btn);
          $('#job-' + jid.replace('.', '')).find('.add-tag input').val(null)
          $('#job-' + jid.replace('.', '')).find('.tags').append(div);
          flash('Tagged ' + jid + ' with ' + tag, 'success', 1500);
        }, error: function() {
          flash('Failed to tag ' + jid + ' with ' + tag);
        }
      });
    }

    /* Helper function for untagging a job */
    var untag = function(jid, tag) {
      var data  = {};
      data[jid] = [tag];
      // The button group of the 'add tag' bit
      var group =
      _ajax({
        url: '<%= u "/untag" %>',
        data: data,
        success : function() {
          $("#job-" + jid.replace('.', '')).find('.tag').filter(function() {
            return $(this).text() === tag;
          }).parent().remove();
          flash('Removed tag ' + tag + ' from ' + jid, 'success', 1500);
        }, error: function() {
          flash('Failed to untag ' + jid + ' with ' + tag);
        }
      });
    }

    /* Helper function for changing a job's priority */
    var priority = function(jid, priority) {
      var p     = parseInt(priority);
      var input = $('#job-' + jid.replace('.', '')).find('.priority');
      if (p != null) {
        input.attr('disabled', true);
        var data = {};
        data[jid] = priority;
        _ajax({
          url: '<%= u "/priority" %>',
          data: data,
          success : function(data) {
            if (data[jid] != 'failed' && data[jid] != null) {
              input.attr('disabled', false).attr('placeholder', 'Pri ' + priority).val(null).blur();
              flash('Reprioritized ' + jid + ' with ' + priority, 'success', 1500);
            } else {
              flash('Couldn\'t reprioritize ' + jid);
              input.val(null).blur();
            }
          }, error: function() {
            flash('Couldn\'t reprioritize ' + jid);
            input.val(null).blur();
          }
        });
      } else {
        // Reset it to its original value, and print an error
        flash('Cannot derive integer from "' + priority + '"');
        input.val(null).blur();
      }
    }

    var pause = function(queue) {
      _ajax({
        url: '<%= u "/pause" %>',
        data: {
          'queue': queue
        }, success: function(data) {
          var button = $('#' + queue + '-pause');
          button.attr('title', 'Unpause').attr(
            'data-original-title', 'Unpause');
          button.addClass('btn-success').removeClass('btn-warning');
          button.children().addClass('glyphicon glyphicon-play').removeClass('glyphicon glyphicon-pause');
          button.attr('onclick', 'unpause("' + queue + '")');
        }, error: function() {
          flash('Couldn\'t pause queue ' + queue);
        }
      })
    }

    var unpause = function(queue) {
      _ajax({
        url: '<%= u "/unpause" %>',
        data: {
          'queue': queue
        }, success: function(data) {
          var button = $('#' + queue + '-pause');
          button.attr('title', 'Pause').attr(
            'data-original-title', 'Pause');
          button.addClass('btn-warning').removeClass('btn-success');
          button.children().addClass('glyphicon glyphicon-pause').removeClass('glyphicon glyphicon-play');
          button.attr('onclick', 'pause("' + queue + '")');
        }, error: function() {
          flash('Couldn\'t unpause queue ' + queue);
        }
      })
    }

    var timeout = function(jid) {
      _ajax({
        url: '<%= u "/timeout" %>',
        data: {
          'jid': jid
        }, success: function(data) {
          flash('Job timed out', 'success');
        }, error: function(data) {
          flash('Failed to time out job: ' + data);
          console.log(data);
        }
      })
    }

    $(document).ready(function() {
      $('button').tooltip({delay:200});
    });
    </script>
    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
  </head>

  <body>
    <div class="navbar navbar-default navbar-fixed-top custora-navbar-top">
      <div class="container custora-navbar">
        <div class="navbar-header">
          <div type="button" class="custora-toggle" data-toggle="collapse" data-target=".navbar-collapse"></div>
          <span class="custora-logo"></span>
          <a class="custora-brand" href="<%= u '/' %>">qless</a>
        </div>
        <div class="navbar-collapse collapse custora-collapse">
          <ul class="nav navbar-nav">
          <% tabs.each do |tab| %>
            <li class="custora-navbar-item"><a href='<%= u tab[:path] %>'><%= tab[:name] %></a></li>
          <% end %>
          </ul>
          <span class="custora-logo2"></span>
          <ul class="nav navbar-nav navbar-right">
            <li>
              <form class="custora-tag-search navbar-form" role="search" action="<%= u '/tag' %>">
                <input id="tag-search" type="text" class="search-query form-control" placeholder="Search by Tag" data-provide="typeahead" name="tag"/>
              </form>
            </li>
          </ul>
        </div>
      </div>
    </div>

      <div class="container">
      <%= yield %>
      <!-- <footer class="footer">
        <p>Powered by <a href="http://github.com/seomoz/qless">qless</a> v<%=Qless::VERSION%></p>
      </footer> -->
      </div> <!-- /container -->

    <!-- Le javascript
    ================================================== -->
    <script src="<%= u '/js/bootstrap.min.js' %>"></script>

    <!-- Noty! This is such a wonderful-looking library, and /exactly/ what I wanted. Thank you so much! -->
    <script src="<%= u '/js/jquery.noty.js' %>"></script>
    <!--
    <script src="../assets/js/bootstrap-transition.js"></script>
    <script src="../assets/js/bootstrap-modal.js"></script>
    <script src="../assets/js/bootstrap-dropdown.js"></script>
    <script src="../assets/js/bootstrap-popover.js"></script>
    <script src="../assets/js/bootstrap-button.js"></script>
    <script src="../assets/js/bootstrap-collapse.js"></script>
    <script src="../assets/js/bootstrap-carousel.js"></script>
    -->
  </body>
</html>
